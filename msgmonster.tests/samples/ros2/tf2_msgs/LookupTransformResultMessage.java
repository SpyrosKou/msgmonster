/*
 * Copyright 2021 msgmonster project
 * 
 * Website: https://github.com/pinorobotics/msgmonster
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * msgmonster autogenerated Java class for jrosclient
 * 
 * Generated for ROS file: tf2_msgs/LookupTransformResult
 */

package id.jrosmessages.test_msgs;

import java.util.Objects;

import id.jrosmessages.Message;
import id.jrosmessages.MessageMetadata;
import id.jrosmessages.Array;
import id.xfunction.XJson;
import id.xfunction.Preconditions;

import id.jrosmessages.geometry_msgs.TransformStampedMessage;
import id.jrosmessages.tf2_msgs.TF2ErrorMessage;

/**
 * Definition for tf2_msgs/LookupTransformResult
 */
@MessageMetadata(
    name = LookupTransformResultMessage.NAME,
    fields = { "transform", "error" }
)
public class LookupTransformResultMessage implements Message {
   
   static final String NAME = "tf2_msgs/LookupTransformResult";

   public TransformStampedMessage transform = new TransformStampedMessage();
   
   public TF2ErrorMessage error = new TF2ErrorMessage();
   
   public LookupTransformResultMessage withTransform(TransformStampedMessage transform) {
       this.transform = transform;
       return this;
   }
   
   public LookupTransformResultMessage withError(TF2ErrorMessage error) {
       this.error = error;
       return this;
   }
   
   @Override
   public int hashCode() {
       return Objects.hash(
           transform,
           error
       );
   }
   
   @Override
   public boolean equals(Object obj) {
       if (obj instanceof LookupTransformResultMessage other)
           return
               Objects.equals(transform, other.transform) &&
               Objects.equals(error, other.error)
           ;
       return false;
   }
   
   @Override
   public String toString() {
       return XJson.asString(
           "transform", transform,
           "error", error
       );
   }
   
}
